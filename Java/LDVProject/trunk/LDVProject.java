/*
 * LDVProject.java
 *
 * Created on July 12, 2004, 5:22 PM
 */

package LDVProject;

import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.net.*;
import javax.media.*;
/**
 *
 * @author  weihong
 */
public class LDVProject extends javax.swing.JFrame {

    public final static int winWidth = 1280;
    public final static int winHeight = 860;
    //public final static int winHeight = 540;
    
    private JFileChooser fChooser;
    private String selectedFileName = null;
    private VoiceExtraction voiceEx = null;
    private WaveForm waveForm = null;
    private VideoPlayer videoPlayer = null;
    private Configuration conf = null;
    private Player audioPlayer = null;
    private String currentDirectory = "C:/";
    private String configFile = "C:/LDVProject.ini";
    private PrintWriter outputWriter;
    private BufferedReader inputReader;
    
    /** Creates new form LDVProject */
    public LDVProject() {
        initComponents();
        setSize(winWidth,winHeight);
        EmptyBorder eb = new EmptyBorder(5,5,5,5);
        BevelBorder bb = new BevelBorder(BevelBorder.LOWERED);
        CompoundBorder cb = new CompoundBorder(eb,bb);
		JPanel p = new JPanel(new GridLayout(1,1));
		//JPanel p = new JPanel(new GridLayout(2,1));
		p.setBorder(new CompoundBorder(cb,new EmptyBorder(0,0,30,0)));
        waveForm = new WaveForm(this);
        p.add(waveForm);
		tabPane.addTab("Audio Panel", p);


        conf = new Configuration(tabPane, this);
        
        //setLocation(300,300);
        try {
            inputReader = new BufferedReader(new FileReader(configFile));
            currentDirectory =  inputReader.readLine();
        }
        catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    public String getCD () 
    {
    	return currentDirectory;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        tabPane = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setTitle("LDV Project Consoler");
        setFont(new java.awt.Font("Courier New", 0, 14));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        getContentPane().add(tabPane, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Play");
        AbstractAction playOpenAction = new AbstractAction() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        };

		// Add shortcut for the keyboard
		InputMap inputMap = getLayeredPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put( KeyStroke.getKeyStroke(KeyEvent.VK_O, 0),  "PLAYOPEN");
		inputMap.put( KeyStroke.getKeyStroke(KeyEvent.VK_O, 2),  "PLAYOPEN");
		ActionMap actionMap = getLayeredPane().getActionMap();
		actionMap.put("PLAYOPEN", playOpenAction);
		jMenuItem5.setAction(playOpenAction);
		jMenuItem5.setText("Open    Ctrl+O");

        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }//GEN-END:initComponents

    // Callback function for Play/Open
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // Add your handling code here:
        ExampleFileFilter filter = new ExampleFileFilter();
        filter.addExtension("wav");
        filter.setDescription("WAV ");
        fChooser = new JFileChooser();
        fChooser.setDialogTitle("Choose the wave file:");
        fChooser.setFileFilter(filter);   
        File currDir = new File (currentDirectory);
        fChooser.setCurrentDirectory(currDir);
        int returnVal = fChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            currentDirectory = fChooser.getCurrentDirectory().getPath();
            selectedFileName = fChooser.getSelectedFile().getName();
			waveForm.setCurrentDirectory(currentDirectory);
			waveForm.setSelectedFileName(selectedFileName);
            waveForm.ResetActionPerformed(null);

			// Display the file name on Windows
			setTitle(selectedFileName);            
        }
    
        
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // Add your handling code here:
        exitForm(null); 
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    // Callback function for File/Open
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Add your handling code here:
        ExampleFileFilter filter = new ExampleFileFilter();
        filter.addExtension("tid");
        filter.setDescription("TID ");
        fChooser = new JFileChooser();
        fChooser.setDialogTitle("Choose the channel data file:");
        fChooser.setFileFilter(filter);   
        File currDir = new File (currentDirectory);
        fChooser.setCurrentDirectory(currDir);
        int returnVal = fChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
            currentDirectory = fChooser.getCurrentDirectory().getPath();
            selectedFileName = fChooser.getSelectedFile().getName();
            waveForm.setCurrentDirectory(currentDirectory);
            waveForm.setSelectedFileName(selectedFileName);
            waveForm.ResetActionPerformed(null);
            
            //voiceEx = new VoiceExtraction(fChooser,  this);
            //voiceEx.SaveVoiceFile();
       
            /* Don't playback the voice until the "Run" button is clicked.
            String tempFileName = fChooser.getCurrentDirectory().getPath() + "\\1.wav";
            try{
                File tempFile = new File (tempFileName);
                audioPlayer = Manager.createRealizedPlayer(tempFile.toURL());
                audioPlayer.start();
            }
            catch (Exception e){
                System.err.println("Error: " + e.getMessage());
            }
             */
            
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm

        try{ // Save the directory of the tid files.
            outputWriter = new PrintWriter(new FileOutputStream(configFile));
            outputWriter.println(currentDirectory);
            outputWriter.close();
        }
        catch (Exception e) { 
            System.err.println("Error: " + e.getMessage()); 
        }
        
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new LDVProject().show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JTabbedPane tabPane;
    // End of variables declaration//GEN-END:variables
    
}
